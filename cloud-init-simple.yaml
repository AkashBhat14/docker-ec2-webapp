#cloud-config

# Simple and reliable cloud-init script for Docker EC2 Chat WebApp
# This version avoids complex YAML structures that cause parsing errors

package_update: true
packages:
  - curl
  - git

write_files:
  - path: /home/ubuntu/setup-everything.sh
    owner: ubuntu:ubuntu
    permissions: '0755'
    content: |
      #!/bin/bash
      exec > /home/ubuntu/setup.log 2>&1
      set -x
      
      echo "Starting setup at $(date)"
      
      # Install Docker
      echo "Installing Docker..."
      curl -fsSL https://get.docker.com -o get-docker.sh
      sudo sh get-docker.sh
      sudo usermod -aG docker ubuntu
      sudo systemctl enable docker
      sudo systemctl start docker
      
      # Install Docker Compose
      echo "Installing Docker Compose..."
      sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      sudo chmod +x /usr/local/bin/docker-compose
      
      # Wait for Docker
      echo "Waiting for Docker to be ready..."
      sleep 10
      while ! docker info > /dev/null 2>&1; do
        echo "Docker not ready, waiting..."
        sleep 5
      done
      
      # Clone repository
      echo "Cloning repository..."
      cd /home/ubuntu
      git clone https://github.com/AkashBhat14/docker-ec2-webapp.git
      cd docker-ec2-webapp
      
      # Get public IP
      echo "Getting public IP..."
      PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
      echo "Public IP: $PUBLIC_IP"
      
      # Create environment file
      echo "Creating environment file..."
      cat > .env << 'EOL'
      GEMINI_API_KEY=your_actual_gemini_api_key_here
      S3_BUCKET_NAME=akash-chat-app-bucket-2025
      EOL
      echo "NEXT_PUBLIC_API_URL=http://$PUBLIC_IP:5000" >> .env
      
      # Build and start containers
      echo "Building and starting containers..."
      docker-compose build --no-cache
      docker-compose up -d
      
      # Wait for services
      echo "Waiting for services to start..."
      sleep 30
      
      # Test services
      echo "Testing services..."
      if curl -s http://localhost:5000/ > /dev/null; then
        echo "Backend OK"
      else
        echo "Backend FAILED"
      fi
      
      if curl -s http://localhost:3000/ > /dev/null; then
        echo "Frontend OK"
      else
        echo "Frontend FAILED"
      fi
      
      # Create status file
      echo "Creating status file..."
      echo "Docker EC2 Chat WebApp - Setup Complete" > /home/ubuntu/status.txt
      echo "Completed at: $(date)" >> /home/ubuntu/status.txt
      echo "Frontend: http://$PUBLIC_IP:3000" >> /home/ubuntu/status.txt
      echo "Backend: http://$PUBLIC_IP:5000" >> /home/ubuntu/status.txt
      echo "S3 Status: http://$PUBLIC_IP:5000/s3/status" >> /home/ubuntu/status.txt
      echo "" >> /home/ubuntu/status.txt
      echo "Container Status:" >> /home/ubuntu/status.txt
      docker-compose ps >> /home/ubuntu/status.txt
      
      echo "Setup completed successfully at $(date)"

runcmd:
  - sudo -u ubuntu /home/ubuntu/setup-everything.sh

final_message: |
  Cloud-init setup completed!
  Check status: cat /home/ubuntu/status.txt
  View logs: cat /home/ubuntu/setup.log
  Your app should be running at http://YOUR_EC2_IP:3000 